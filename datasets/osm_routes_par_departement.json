{
  "type": "PostgreSQL",
  "managed": true,
  "checklists": {
    "checklists": []
  },
  "checks": [],
  "customMeta": {
    "kv": {}
  },
  "flowOptions": {
    "virtualizable": false,
    "rebuildBehavior": "NORMAL",
    "crossProjectBuildBehavior": "DEFAULT"
  },
  "partitioning": {
    "ignoreNonMatchingFile": false,
    "dimensions": []
  },
  "versionTag": {
    "versionNumber": 3,
    "lastModifiedBy": {
      "login": "grabenertr"
    },
    "lastModifiedOn": 1489076140407
  },
  "creationTag": {
    "versionNumber": 0,
    "lastModifiedBy": {
      "login": "grabenertr"
    },
    "lastModifiedOn": 1489072944344
  },
  "tags": [
    "creator:grabenertr"
  ],
  "params": {
    "writeWithCopyBadDataBehavior": "NOVERIFY_ERROR",
    "connection": "postgis",
    "mode": "table",
    "partitioned": false,
    "partitioningType": "custom",
    "normalizeDoubles": true,
    "table": "osm_routes_par_departement",
    "tableCreationMode": "auto",
    "customPostWriteStatements": "-- Il y a 5 LineString qui empÃªche de typer correctement en MultiLineString\nDELETE FROM osm_routes_par_departement\n\tWHERE GeometryType(the_geom) \u003d \u0027LINESTRING\u0027\n\nALTER TABLE \"osm_routes_par_departement\"\n\tALTER COLUMN the_geom type geography(MultiLineString) using the_geom::geography(MultiLineString);\n\nCREATE INDEX geom_osm_routes_dep_idx ON \"osm_routes_par_departement\"\n\tUSING GIST(the_geom);",
    "writeInsertBatchSize": 10000,
    "writeJDBCBadDataBehavior": "DISCARD_ROW",
    "hasColsWithUnknownTz": false,
    "readColsWithUnknownTzAsDates": false
  },
  "schema": {
    "userModified": false,
    "columns": [
      {
        "name": "the_geom",
        "type": "string",
        "timestampNoTzAsDate": false,
        "maxLength": -1
      },
      {
        "name": "CODE_DEPT",
        "type": "string",
        "timestampNoTzAsDate": false,
        "maxLength": -1
      },
      {
        "name": "num_route_or_id",
        "type": "string",
        "timestampNoTzAsDate": false,
        "maxLength": -1
      }
    ]
  },
  "metrics": {
    "probes": [
      {
        "type": "basic",
        "enabled": true,
        "computeOnBuildMode": "PARTITION",
        "meta": {
          "name": "Basic data",
          "level": 0
        },
        "configuration": {}
      },
      {
        "type": "records",
        "enabled": true,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Record count",
          "level": 0
        },
        "configuration": {}
      }
    ],
    "engineConfig": {
      "padRunsWithMetrics": false,
      "hive": {
        "active": true,
        "extraConf": []
      },
      "basic": {},
      "dss": {
        "active": true,
        "selection": {
          "useMemTable": false,
          "filter": {
            "distinct": false,
            "enabled": false
          },
          "partitionSelectionMethod": "ALL",
          "latestPartitionsN": 1,
          "samplingMethod": "FULL",
          "maxRecords": -1,
          "targetRatio": 0.02,
          "withinFirstN": -1,
          "maxReadUncompressedBytes": -1
        }
      },
      "sql": {
        "active": true
      },
      "impala": {
        "active": true
      },
      "python": {}
    },
    "displayedState": {
      "columns": [],
      "metrics": [
        "basic:COUNT_COLUMNS",
        "records:COUNT_RECORDS"
      ]
    }
  },
  "metricsChecks": {
    "runOnBuild": false,
    "checks": [],
    "displayedState": {
      "checks": []
    }
  }
}